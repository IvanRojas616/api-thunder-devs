{"version":3,"sources":["../../src/middlewares/authUserState.js"],"names":["authStateUser","req","res","next","console","log","token","headers","authorization","decoded","split","user","connectionDB","getDBInstance","collection","findOne","email","err","response","state","sendStatus"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AAEA,MAAMA,aAAa,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAD8C,CAE9C;;AACA,QAAMC,KAAK,GAAGL,GAAG,CAACM,OAAJ,CAAYC,aAA1B;AACA,QAAMC,OAAO,GAAG,wBAAWH,KAAK,CAACI,KAAN,CAAY,SAAZ,EAAuB,CAAvB,CAAX,CAAhB;AACA,QAAMC,IAAI,GAAGF,OAAO,CAAC,2BAAD,CAApB,CAL8C,CAM9C;;AACA,QAAMG,sBACHC,aADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,OAHG,CAGK;AAAEC,IAAAA,KAAK,EAAEL,IAAI,CAACK;AAAd,GAHL,EAG4B,OAAOC,GAAP,EAAYC,QAAZ,KAAyB;AACrD;AACA;AACF,QAAIA,QAAJ,EAAc;AACZ;AACA,UAAIA,QAAQ,CAACC,KAAT,KAAmB,UAAvB,EAAmC;AACjC;AACAjB,QAAAA,GAAG,CAACkB,UAAJ,CAAe,GAAf;AACD,OAHD,MAGO;AACL;AACAjB,QAAAA,IAAI;AACL;AACF,KATD,MASO;AACHA,MAAAA,IAAI;AACP;AACF,GAlBG,CAAN;AAmBD,CA1BD;;eA4BeH,a","sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport connectionDB from \"../db/connectionDB\";\n\n//Here verify if user isn't rejected etc in his state\n//Obviously when he register first time, never state is rejected\n\nconst authStateUser = async (req, res, next) => {\n  console.log(\"Inside custom middleware\");\n  //1. get user from token\n  const token = req.headers.authorization;\n  const decoded = jwt_decode(token.split(\"Bearer \")[1]);\n  const user = decoded[\"http://localhost/userData\"];\n  //2.read user from db\n  await connectionDB\n    .getDBInstance()\n    .collection(\"users\")\n    .findOne({ email: user.email }, async (err, response) => {\n        //if not found in the db, then next(), for create the user\n        //this was a bug, but with the if/else extren is resolved\n      if (response) {\n        //3. verify user state\n        if (response.state === \"rejected\") {\n          //5.whereas if he doesn't, send authentication error\n          res.sendStatus(403);\n        } else {\n          //4.if user is authorized or pending, execute next()\n          next();\n        }\n      } else {\n          next();\n      }\n    });\n};\n\nexport default authStateUser;\n"],"file":"authUserState.js"}